/*Selectors:
    As elements are added to a web page, they may they may be styled using CSS. A selector designates exactly which 
    element or elements within our HTML to target and apply styles (such as color, size, and position) to. Selectors 
    may include a combination of different qualifiers to select unique elements, all depending on how specific we wish 
    to be. For example, we may want to select every paragraph on a page, or we may want to select only one specific 
    paragraph on a page.
*/
type{

}

#id{

}

.class{

}

/*Properties
    Once an element is selected, a property determines the styles that will be applied to that element. Property names 
    fall after a selector, within the curly brackets, {}, and immediately preceding a conlon, :. There are numerous we
    can use, such as background, color, font-size, height, and width, and new properties are often added. In the following
    code, we are defining the color and font-size properties to be applied to all <p> elements.
*/

p {
  color: somevalue;
  font-size: somevalue;
}

/*Values
    So far we've selected an element with a selctor and determined what sthle we'd like to apply with a property. Now we can
    determine the behavior of that property with a value. Here we are selecting all <p> elements and setting the value of the color
    property to be orange and the vlaue of the font-size property to be 16 pixels.
*/

p {
  color: orange;
  font-size: 16px;
}

/*Working with selectors
    Selectors,a s previously mentioned, indicate which HTML elements are being styled. It is important to fully understand how to 
    use selectors and how they can be leveraged. The first step is to become familiar with the different types of selectors. We'll 
    start with the most common selectors: type, class, and ID selectors.
*/

/*Type selectors
    Type selectors target elements by their element type. For example, should we wish to target all division elements, <div>, we would
    use a type selector of div. The following code shows a type selector for division elements as well as the corresponding HTML it 
    selects.
*/
div {  }

/*
    <div>...</div>          
    <div>...</div>
*/

/*Class selectors
    Class selectors allow us to select an element based on the element's class attribute value. Class selectors are a little more specific than
    type selectors, as they select a particular group of elements rather than all elements of one type. 

    Class selectors allow us to apply the same styles to different elements at once by using the same class attribute value across multiple elements.
*/

.awesome{}

/*
    <div class="awesome">...</div>
    <p class="awesome">...</p>
*/

/*ID Selectors
    ID selectors are even more precise than class selectors, as they target only one unique element at a time. Just as class selectors use an element's class
    attribute value as the selector, ID selectors use an element's id attribute value as a selector. 

    Regardless of which type of element they appear on, id attribute values can only be used once per page. If used they should be reserved for sigificant elements.
*/

#yuelong{}

/*<div id="yuelong">...</div>*/


/*Descenden selector
    The most common child selector is the descendant selector, which matches every element that follows an identified ancestor. The descendant element does not have
    to come directly after the ancestor element inside the document tree. Descendant selectors are created by spacing apart elements within a selector, creating a new
    level a hierarchy for each element list.
*/

article h2{}

/*
<h2>...</h2>
<article>
  <h2>This heading will be selected</h2>
  <div>
    <h2>This heading will be selected</h2>
  </div>
</article>
*/

/*Direct Child Selector
    Sometimes descendant selectors go a bit overboard, selecting more than hoped. At times only the direct children of a parent element need to be selected, not every
    instance of the element nested deeply inside of an ancestor. In this event the direct child selector may be used by placing a greater than sign, >, between the 
    [arent element and child element within the selector.
*/

arcticle > p {}

/*
<p>...</p>
<article>
  <p>This paragraph will be selected</p>
  <div>
    <p>...</p>
  </div>
</article>
*/